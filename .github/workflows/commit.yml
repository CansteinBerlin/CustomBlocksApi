# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  copy:
    name: Copy api folder to api branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: copy
        env:
          SRC_FOLDER_PATH: 'src/main/java/de/canstein_berlin/customblocksapi/api'
          TARGET_BRANCH: 'api'
        run: |
          files=$(find $SRC_FOLDER_PATH -type f) # get the file list
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git fetch                         # fetch branches
          git checkout $TARGET_BRANCH       # checkout to your branch
          git checkout ${GITHUB_REF##*/} -- $files # copy files from the source branch
          git add -A
          git diff-index --quiet HEAD ||  git commit -am "deploy files"  # commit to the repository (ignore if no modification)
          git push origin $TARGET_BRANCH # push to remote branch

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify

      - name: Create necessary directories
        run: mkdir staging && cp target/*.jar staging

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-${{ github.sha }}
          path: staging
